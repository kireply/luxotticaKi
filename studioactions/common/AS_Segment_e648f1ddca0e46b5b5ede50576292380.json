{
    "AS_Segment_e648f1ddca0e46b5b5ede50576292380": {
        "id": "AS_Segment_e648f1ddca0e46b5b5ede50576292380",
        "type": "ACTION_SEQUENCE",
        "params": [{
            "datatype": "collection",
            "name": "eventobject"
        }, {
            "datatype": "number",
            "name": "sectionNumber"
        }, {
            "datatype": "number",
            "name": "rowNumber"
        }],
        "contextObj": {
            "name": "userwidgetmodel",
            "type": "userwidgets",
            "KUID": "u9c48b958b804cb5be55e25f3f6f5dfb"
        },
        "language": "js",
        "eventType": "onRowClick",
        "actions": [{
            "id": "ADD_SNIPPET_ed339f95c3324cebbfb62923369144b6",
            "type": "ADD_SNIPPET",
            "codeSnippet": "//debugger;\nvar menu = this.view.segMenu.selectedRowItems[0];\nvar menuOption = menu.lblMenu;\nvoltmx.print(\"### Menu: \" + JSON.stringify(menu) );\nvoltmx.print(\"### Menu option: \" + \"-\" + menuOption + \"-\");\n\nif (menuOption === \"Flows\") {\n  if (gblChannelId === \"\") { // channel not selected yet, navigate back to channels\n    // resetting global variables\n    gblChannelId = \"\";\n    gblChannelName = \"\";\n    gblChannelLogo = \"\";\n    gblChannelProperties = \"\";\n    gblChannelGenericImage = \"\";\n    gblChannelAssetsCDN = \"\";\n    gblChannelProjectImage = \"\";\n    gblChannelFrameOnlyLensUPC = \"\";\n    gblChannelShowUiSkeleton = \"\";\n    gblInfoIcon = \"\";\n    gblFlowId = \"\";\n    gblFlowCategory = \"\";\n    gblFlowName = \"\";\n    gblFlowStatus = \"\";\n    gblFlowDescription = \"\";\n    gblFlowEnvironment = \"\";\n    gblFlowAuthor = \"\";\n    gblFlowLayoutId = \"\";\n    gblFlowDefault = false;\n    gblFlowSupernova = false;\n    gblFlowFrameOnly = false;\n    gblFlowFramePlusLenses = false;\n    gblFlowSavingsLabel = false;\n    gblFlowDistanceReading = false;\n    gblDuplicateIcon = false;\n    gblEditIcon = false;\n    gblArchiveIcon = false;\n    gblActivateIcon = false;\n    gblNavigatedFromLogin = false;\n    gblSelectedComponentLeft = false;\n    gblSelectedComponentRight = false;\n    gblLeftOrder = 1;\n    gblRightOrder = 1;\n    gblLastInsertedComponent = \"\";\n    gblFail = false;\n    gblLabelsPage = 1;\n    gblLabelsColumns = 0;\n    gblLabelsFileUploaded = false;\n    gblActivateLabelCopy = false;\n    gblPublishLabelCopy = false;\n    gblDuplicateLabelCopy = false;\n    gblLabelCopyId = 0;\n    gblLabelCopyFlowId = 0;\n    gblLabelCopyFlowName = \"\";\n    gblLabelCopyEnvironment = \"\";\n    gblLabelCopyStatus = \"\";\n    gblNewLabelCopyId = 0;\n    gblFirstStepTitle = \"\";\n    gblStepIdToChange = 0;\n    gblStepBoxToChange = \"\";\n    gblCurrentStepOrder = 1;\n    gblCurrentStepTitle = \"\";\n    gblLastInsertedStep = 1;\n    gblFatherNest = \"\";\n    gblIsNestedInsideEdit = false;\n    gblEditingLeftSide = false;\n    gblEditingRightSide = false;\n    gblSaveAfterEdit = false;\n    gblComponentId = \"\";\n\n    //gblChannels = [];\n    gblFlowsList = {};\n    //gblSimpleComponentsTemplates = [];\n    //gblConfigurableComponentsTemplates = [];\n    gblPropertyTemplatesIds = {};\n    gblLabelsList = {};\n    gblLabelCopyList = {};\n    //gblDefaultComponents = [];\n    gblIdOrderSteps = {};\n    gblFetchedLabels = {};\n    voltmx.print(\"### global variables resetted navigating back to Channels\");\n    \n    var ntf = new voltmx.mvc.Navigation(\"frmChannels\");\n    ntf.navigate();\n    voltmx.print(\"### Navigate to: \" + menuOption);\n  } else { // channel was selected, I can navigate back to its flows\n    // resetting global variables\n    gblInfoIcon = \"\";\n    gblFlowId = \"\";\n    gblFlowCategory = \"\";\n    gblFlowName = \"\";\n    gblFlowStatus = \"\";\n    gblFlowDescription = \"\";\n    gblFlowEnvironment = \"\";\n    gblFlowAuthor = \"\";\n    gblFlowLayoutId = \"\";\n    gblFlowDefault = false;\n    gblFlowSupernova = false;\n    gblFlowFrameOnly = false;\n    gblFlowFramePlusLenses = false;\n    gblFlowSavingsLabel = false;\n    gblFlowDistanceReading = false;\n    gblDuplicateIcon = false;\n    gblEditIcon = false;\n    gblArchiveIcon = false;\n    gblActivateIcon = false;\n    gblNavigatedFromLogin = false;\n    gblSelectedComponentLeft = false;\n    gblSelectedComponentRight = false;\n    gblLeftOrder = 1;\n    gblRightOrder = 1;\n    gblLastInsertedComponent = \"\";\n    gblFail = false;\n    gblLabelsPage = 1;\n    gblLabelsColumns = 0;\n    gblLabelsFileUploaded = false;\n    gblActivateLabelCopy = false;\n    gblPublishLabelCopy = false;\n    gblDuplicateLabelCopy = false;\n    gblLabelCopyId = 0;\n    gblLabelCopyFlowId = 0;\n    gblLabelCopyFlowName = \"\";\n    gblLabelCopyEnvironment = \"\";\n    gblLabelCopyStatus = \"\";\n    gblNewLabelCopyId = 0;\n    gblFirstStepTitle = \"\";\n    gblStepIdToChange = 0;\n    gblStepBoxToChange = \"\";\n    gblCurrentStepOrder = 1;\n    gblCurrentStepTitle = \"\";\n    gblLastInsertedStep = 1;\n    gblFatherNest = \"\";\n    gblIsNestedInsideEdit = false;\n    gblEditingLeftSide = false;\n    gblEditingRightSide = false;\n    gblSaveAfterEdit = false;\n    gblComponentId = \"\";\n\n    gblPropertyTemplatesIds = {};\n    gblLabelsList = {};\n    gblLabelCopyList = {};\n    gblIdOrderSteps = {};\n    gblFetchedLabels = {};\n    voltmx.print(\"### global variables resetted navigating back to Flows\");\n\n    //debugger;\n    \n    // if the user is in the last form (stepComposition), we need to reset all data in the page\n    let formName = voltmx.application.getCurrentForm().id;\n    if (formName === \"frmStepComposition\") {\n\n      // resetting steps and flexes at the original/initial state\n      let s = this.view.flxSteps.widgets();\n      let f = this.view.flxRightSide.widgets();\n      let fcomp = this.view.flxScrollRight;\n      let componentsRight = this.view.flxScrollRight.widgets();\n      let componentsLeft = this.view.flxScrollLeft.widgets();\n\n      // removing all edits in steps\n      for (let i = 2; i < s.length; i++) { // 2 because 0 and 1 are default widgets\n        this.view.flxSteps.remove(s[i]);\n      }\n      // setting first step with default title, white background and properties\n      this.view.flxBoxFirstStep.skin = \"CopyslFbox0i1d3be11703146\";\n      this.view.lblStepTitleIntoStepComposition.text = \"Step1\";\n      this.view.flxBoxFirstStep = gblStepInitialState;\n\n      for (let i = 4; i < f.length; i++) { // 4 because from 0 and 3 are default widgets\n        this.view.flxRightSide.remove(f[i]);\n      }\n      //debugger;\n      // setting default properties for scroll right\n      this.view.flxScrollRight = gblFlexRightInitialState;\n      // removing all components from first Scroll right\n      for (let i = 0; i < componentsRight.length; i++) {\n        this.view.flxScrollRight.remove(componentsRight[i]);\n      }\n\n      /* questo non dovrebbe più servire perchè nel ciclo prima cancello i componenti (flex)\nfor (var prop in this.view.flxScrollRight) {\n  if (this.view.flxScrollRight.hasOwnProperty(prop) && prop.startsWith(\"flex\")) {\n    //delete fcomp[prop];\n    delete this.view.flxScrollRight[prop];\n  }\n} */\n\n      // setting default properties for scroll right\n      this.view.flxScrollLeft = gblFlexLeftInitialState;\n      // removing all components from first Scroll right\n      for (let i = 0; i < componentsLeft.length; i++) {\n        this.view.flxScrollLeft.remove(componentsLeft[i]);\n      }\n\n      // showing default message for left and right panels\n      //debugger;\n      this.view.imgNoComponentsRight.setVisibility(true);\n      this.view.lblNoComponentsRight.setVisibility(true);\n      this.view.txtStartPhraseRight.setVisibility(true);\n\n      this.view.imgNoComponentsLeft.setVisibility(true);\n      this.view.lblNoComponentsLeft.setVisibility(true);\n      this.view.txtStartPhraseLeft.setVisibility(true);\n\n      //this.view.flxScrollRight.setVisibility(false);\n\n      // clearing settings side\n      this.view.settingsSide.flxScrollSettingsContent.removeAll();\n      //this.view.settingsSide.flxScrollSettingsContent.setVisibility(false);\n      this.view.settingsSide.txt.setVisibility(true);\n\n    }\n\n    // navigating to frmFlows\n\n    var ntf = new voltmx.mvc.Navigation(\"frmFlows\");\n    ntf.navigate();\n    voltmx.print(\"### Navigate to: \" + menuOption);\n  }\n}\n\n\nif (menuOption === \"Labels\") {\n        var ntf = new voltmx.mvc.Navigation(\"frmLabelCopy\");\n        ntf.navigate();\n  \t\tvoltmx.print(\"### Navigate to: \" + menuOption);\n}\n\n\nif (menuOption === \"Users management\") {\n        var ntf = new voltmx.mvc.Navigation(\"frmDashboard\");\n        ntf.navigate();\n  \t\tvoltmx.print(\"### Navigate to: \" + menuOption);\n}\n\n\nif (menuOption === \"Channel settings\") {\n        var ntf = new voltmx.mvc.Navigation(\"frmChannelSettings\");\n        ntf.navigate();\n  \t\tvoltmx.print(\"### Navigate to: \" + menuOption);\n}\n\n\nif (menuOption === \"Channels\") {\n        var ntf = new voltmx.mvc.Navigation(\"frmChannels\");\n        ntf.navigate();\n  \t\tvoltmx.print(\"### Navigate to: \" + menuOption);\n}\n\n",
            "parentId": null,
            "disabled": false
        }]
    }
}