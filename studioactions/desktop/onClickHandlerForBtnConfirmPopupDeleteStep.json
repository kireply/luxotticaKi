{
    "AS_Button_b44b82938c3e445f84846fd42d3a186c": {
        "id": "AS_Button_b44b82938c3e445f84846fd42d3a186c",
        "type": "ACTION_SEQUENCE",
        "name": "onClickHandlerForBtnConfirmPopupDeleteStep",
        "params": [{
            "datatype": "collection",
            "name": "eventobject"
        }],
        "contextObj": {
            "name": "frmStepComposition",
            "type": "forms",
            "platform": "",
            "KUID": "j7b99cee3df84132ae59e348dbb47442"
        },
        "language": "js",
        "eventType": "onClick",
        "actions": [{
            "id": "ADD_LOCAL_VARIABLE_g511f6248bab407abace60ca143630d4",
            "type": "ADD_LOCAL_VARIABLE",
            "name": "idStepToRemove",
            "isGlobal": false,
            "valuetype": "constant",
            "datatype": "number",
            "value": "0",
            "parentId": null,
            "callbackType": null
        }, {
            "id": "ADD_LOCAL_VARIABLE_ba5069b3096c49e88be4b733f443727d",
            "type": "ADD_LOCAL_VARIABLE",
            "name": "labelsToRemove",
            "isGlobal": false,
            "valuetype": "constant",
            "datatype": "collection",
            "value": "{}",
            "parentId": null,
            "callbackType": null
        }, {
            "id": "ADD_LOCAL_VARIABLE_e10f1bbd7b804698a112723e628910d8",
            "type": "ADD_LOCAL_VARIABLE",
            "name": "i",
            "isGlobal": false,
            "valuetype": "constant",
            "datatype": "number",
            "value": "0",
            "parentId": null,
            "callbackType": null
        }, {
            "id": "ADD_LOCAL_VARIABLE_b641944ed1f044529c584c4621666295",
            "type": "ADD_LOCAL_VARIABLE",
            "name": "numLabelsToRemove",
            "isGlobal": false,
            "valuetype": "constant",
            "datatype": "number",
            "value": "0",
            "parentId": null,
            "callbackType": null
        }, {
            "id": "ADD_LOCAL_VARIABLE_d53f1e8065304d92b3cf5dfc77f75f10",
            "type": "ADD_LOCAL_VARIABLE",
            "name": "labelIdToRemove",
            "isGlobal": false,
            "valuetype": "constant",
            "datatype": "string",
            "value": "\"\"",
            "parentId": null,
            "callbackType": null
        }, {
            "id": "LOADING_INDICATOR_acaf5c1a19ca425faf12811b677a6535",
            "selectedOption": "show",
            "parentId": null,
            "type": "LOADING_INDICATOR",
            "callbackType": null,
            "skin": "none",
            "position": "constants.LOADING_SCREEN_POSITION_FULL_SCREEN",
            "isBlocked": "true",
            "showProgressIndicator": "true",
            "text": "Deleting step..."
        }, {
            "id": "INVOKE_SERVICE_a741dc726f7c4fadb326e0bef8094168",
            "type": "INVOKE_ASYNC_SERVICE",
            "inputparams": null,
            "httpheaders": null,
            "httpconfigs": null,
            "isasynchronous": true,
            "mappings": {
                "ME_Mapping_ed13544bb7ea4ecf842ba6f9c97faa5a": {
                    "channel": "desktop",
                    "id": "ME_Mapping_ed13544bb7ea4ecf842ba6f9c97faa5a",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "gblCurrentStepOrder",
                        "dataType": "number",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "order",
                        "dataType": "string",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "STEP_CustomQueryGetSingleStep",
                            "operationid": "132023"
                        }
                    }
                },
                "ME_Mapping_b4ee15c70572491999625a5fedc3fb70": {
                    "channel": "desktop",
                    "id": "ME_Mapping_b4ee15c70572491999625a5fedc3fb70",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "gblFlowId",
                        "dataType": "string",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "flow_id",
                        "dataType": "string",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "STEP_CustomQueryGetSingleStep",
                            "operationid": "132023"
                        }
                    }
                }
            },
            "mappingsOrder": ["ME_Mapping_ed13544bb7ea4ecf842ba6f9c97faa5a", "ME_Mapping_b4ee15c70572491999625a5fedc3fb70"],
            "serviceconfig": {
                "servicename": "mariaDB",
                "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                "type": "integration",
                "operationname": "STEP_CustomQueryGetSingleStep",
                "operationid": "132023"
            },
            "parentId": null,
            "callbackType": null,
            "enableMappingEditor": true
        }, {
            "id": "_a166c7c809f64d6cbe05bd9640358caf",
            "type": "IF_CONDITION",
            "conditions": [{
                "leftValueType": "expression",
                "leftValue": "STEP_CustomQueryGetSingleStep.records !== null"
            }, {
                "leftValueType": "expression",
                "leftValue": "STEP_CustomQueryGetSingleStep.records.length > 0"
            }],
            "parentId": "INVOKE_SERVICE_a741dc726f7c4fadb326e0bef8094168",
            "callbackType": "Callback",
            "criteria": "all"
        }, {
            "id": "ADD_SNIPPET_b3aacadcce0240859d3d7de86d343816",
            "type": "ADD_SNIPPET",
            "codeSnippet": "// we found the step id we want to delete\nidStepToRemove = STEP_CustomQueryGetSingleStep.records[0].id;\ndebugger;",
            "parentId": "_a166c7c809f64d6cbe05bd9640358caf",
            "callbackType": null
        }, {
            "id": "INVOKE_SERVICE_a66c0ab2d5e84e9a9cfee1d5314b7a82",
            "type": "INVOKE_ASYNC_SERVICE",
            "inputparams": null,
            "httpheaders": null,
            "httpconfigs": null,
            "isasynchronous": true,
            "mappings": {
                "ME_Mapping_hff62a3a2e3f4962b0423c9fde6150c9": {
                    "channel": "desktop",
                    "id": "ME_Mapping_hff62a3a2e3f4962b0423c9fde6150c9",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "idStepToRemove",
                        "dataType": "number",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "id",
                        "dataType": "number",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "STEP_delete",
                            "operationid": "122823"
                        }
                    }
                }
            },
            "mappingsOrder": ["ME_Mapping_hff62a3a2e3f4962b0423c9fde6150c9"],
            "serviceconfig": {
                "servicename": "mariaDB",
                "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                "type": "integration",
                "operationname": "STEP_delete",
                "operationid": "122823"
            },
            "parentId": "_a166c7c809f64d6cbe05bd9640358caf",
            "callbackType": null,
            "enableMappingEditor": true
        }, {
            "id": "_if27579cf8d543da86811ee9793e3d35",
            "type": "IF_CONDITION",
            "conditions": [{
                "leftValueType": "expression",
                "leftValue": "STEP_delete.opstatus === 0"
            }],
            "parentId": "INVOKE_SERVICE_a66c0ab2d5e84e9a9cfee1d5314b7a82",
            "callbackType": "Callback",
            "criteria": "all"
        }, {
            "id": "ADD_SNIPPET_acdbf3d072dc42b0b4303032a0435638",
            "type": "ADD_SNIPPET",
            "codeSnippet": "voltmx.print(\"### Step eliminato correttamente.\")\ndebugger;\n\n// updating global variable \"gblIdOrderSteps\"\nlet newIdOrderSteps = {};\nlet keyDeleted = false;\n\n// re-ordering correct steps id order (removing the id step we are eliminating)\nlet keys = Object.keys(gblIdOrderSteps).map(Number).sort((a, b) => a - b);\n\nfor (let key of keys) {\n  if (key === parseInt(idStepToRemove)) {\n    keyDeleted = true;\n    continue;\n  }\n  if (keyDeleted) {\n    newIdOrderSteps[key] = (parseInt(gblIdOrderSteps[key]) - 1).toString();\n  } else {\n    newIdOrderSteps[key] = gblIdOrderSteps[key];\n  }\n}\n\n// re-assigning the correct steps id order\ngblIdOrderSteps = newIdOrderSteps;\n\n\n/*\nOra procedo ad eliminare tutte le labels che contengono\nnella loro stringa di di il <flow_id> e l' <order> dello step\n*/",
            "parentId": "_if27579cf8d543da86811ee9793e3d35",
            "callbackType": null
        }, {
            "id": "INVOKE_SERVICE_e08860cd60da4472959c8ab26c01b1fe",
            "type": "INVOKE_ASYNC_SERVICE",
            "inputparams": null,
            "httpheaders": null,
            "httpconfigs": null,
            "isasynchronous": true,
            "mappings": {
                "ME_Mapping_f173344c92d14e9e9952907d34cee811": {
                    "channel": "desktop",
                    "id": "ME_Mapping_f173344c92d14e9e9952907d34cee811",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "gblFlowId",
                        "dataType": "string",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "flow_id",
                        "dataType": "string",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "LABEL_flow_stepTitle_CustomQueryGet",
                            "operationid": "134231"
                        }
                    }
                },
                "ME_Mapping_dfb2cd2a67dc41c9b74b23997d43fc5e": {
                    "channel": "desktop",
                    "id": "ME_Mapping_dfb2cd2a67dc41c9b74b23997d43fc5e",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "gblCurrentStepTitle",
                        "dataType": "string",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "step_title",
                        "dataType": "string",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "LABEL_flow_stepTitle_CustomQueryGet",
                            "operationid": "134231"
                        }
                    }
                },
                "ME_Mapping_f43bc20f8eea45eba53af01b7dad0fab": {
                    "channel": "desktop",
                    "id": "ME_Mapping_f43bc20f8eea45eba53af01b7dad0fab",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "gblCurrentStepTitle",
                        "dataType": "string",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "same_step_title",
                        "dataType": "string",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "LABEL_flow_stepTitle_CustomQueryGet",
                            "operationid": "134231"
                        }
                    }
                }
            },
            "mappingsOrder": ["ME_Mapping_f173344c92d14e9e9952907d34cee811", "ME_Mapping_dfb2cd2a67dc41c9b74b23997d43fc5e", "ME_Mapping_f43bc20f8eea45eba53af01b7dad0fab"],
            "serviceconfig": {
                "servicename": "mariaDB",
                "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                "type": "integration",
                "operationname": "LABEL_flow_stepTitle_CustomQueryGet",
                "operationid": "134231"
            },
            "parentId": "_if27579cf8d543da86811ee9793e3d35",
            "callbackType": null,
            "enableMappingEditor": true
        }, {
            "id": "_b86f62f93d224f35bda8be8fc5d10184",
            "type": "IF_CONDITION",
            "conditions": [{
                "leftValueType": "expression",
                "leftValue": "LABEL_flow_stepTitle_CustomQueryGet.opstatus === 0"
            }, {
                "leftValueType": "expression",
                "leftValue": "LABEL_flow_stepTitle_CustomQueryGet.records !== null"
            }],
            "parentId": "INVOKE_SERVICE_e08860cd60da4472959c8ab26c01b1fe",
            "callbackType": "Callback",
            "criteria": "all"
        }, {
            "id": "ADD_SNIPPET_fa19bd367ad8482a941c45815d097dae",
            "type": "ADD_SNIPPET",
            "codeSnippet": "labelsToRemove = LABEL_flow_stepTitle_CustomQueryGet.records;\nnumLabelsToRemove = labelsToRemove.length-1;\ndebugger;\n\n/*\nOra che ho recuperato tutte le labels (con id dentro) da eliminare,\nrichiamo un ciclo for che chiama il servizio LABEL_delete per eliminare\ndal DB tutte le labels in labelsToRemove.\n*/\n/*\nfor (let i = 0; i < labelsToRemove.length; i++) {\n  \n  let idToRemove = labelsToRemove[i].id;\n  voltmx.sdk.getDefaultInstance().getIntegrationService(\"mariaDB\").invokeOperation(\"LABEL_delete\", {}, idToRemove, (response) => {\n    voltmx.print(\"### Label deleted: \" + idToRemove);\n    voltmx.print(\"### Label deleted RESPONSE: \" + JSON.stringify(response));\n  },\n\n    (error) => {\n    voltmx.print(\"### Error invocating LABEL_delete inside -onClickHandlerForBtnConfirmPopupDeleteStep-\");\n    voltmx.print(\"### Error RESPONSE: \" + JSON.stringify(error));\n  });\n}\n\n// hiding popup\nself.view.flxPopupDeleteStep.setVisibility(false);\nself.view.flxNewStepBlur.setVisibility(false);\n*/\n\n",
            "parentId": "_b86f62f93d224f35bda8be8fc5d10184",
            "callbackType": null
        }, {
            "id": "LOOP_ACTION_d5fc8c14b71c4d91af14fad469da7bd9",
            "type": "LOOP_ACTION",
            "parentId": "_b86f62f93d224f35bda8be8fc5d10184",
            "callbackType": null,
            "varType": "choose",
            "variable": "i",
            "startType": "set",
            "startValue": 0,
            "endType": "choose",
            "endValue": "numLabelsToRemove",
            "stepBy": 1,
            "direction": "inc"
        }, {
            "id": "ADD_SNIPPET_d9ad759eb745439da140ddc6ddf29afe",
            "type": "ADD_SNIPPET",
            "codeSnippet": "voltmx.print(\"### delete COMPLETED.\");\n// we are outside the loop now.\n// WE REMOVE THE GRAPHIC PART FROM THE FORM\n\n// removing flxScroll related to the step we are deleting\nlet scroll = self.findCurrentFlexScroll();\nlet idScrollToRemove = scroll.id;\nlet numScrollToRemove = idScrollToRemove.match(/\\d+/)[0]; // Estrapolo solo il gruppo di cifre finali (ordine dello scroll)\nif (numScrollToRemove === null) {\n  numScrollToRemove = 1; // the scroll to remove is the first (\"flxScrollRight\") and doesn't have number 1 in front\n}\nself.view.flxRightSide.remove(scroll);\n\n// removing the step box\nlet stepBoxIdToDelete = \"boxStep\" + gblCurrentStepOrder;\nlet widget = self.view.flxSteps.widgets().find(w => w.id === stepBoxIdToDelete);\nself.view.flxSteps.remove(widget);\n\n// decreasing gbl variables only if different from first.\ngblCurrentStepOrder = gblCurrentStepOrder === 1 ? 1 : --gblCurrentStepOrder;\ngblLastInsertedStep = gblLastInsertedStep === 1 ? 1 : --gblLastInsertedStep;\n// gblCurrentStepTitle is already updated now (to the previous step)\n\ndebugger;\nlet stepBoxes = self.view.flxSteps.widgets();  // contains the \"add stepp\" too.\nlet scrolls = self.view.flxRightSide.widgets();  \n// for each flxScroll, decrease id by 1\nfor (let i = stepBoxes.length; i > numScrollToRemove; --i) {  // updating only flex that were after the one deleted\n  scrolls[i+3-2].newId = (i === 2 ? \"flxScrollRight\" : \"flxScrollRight\" + (i-1) );  //+3 perchè i primi [0/1/2] sono di \"messaggio pannello vuoto\"\n}\n\n// for each step box remaining, decrease the label step and the id (newId) by 1\nfor (let i = stepBoxes.length; i > numScrollToRemove; --i) {  // updating only step boxes that were after the one deleted\n  stepBoxes[i-1].lblStepOrder.text = \"Step \" + (i-1);\n  stepBoxes[i-1].newId = (i === 2 ? \"flxBoxFirstStep\" : \"boxStep\" + (i-1) );\n  \n  // guarda la posizione di ogni step box, dovrà essere decrementata di 90 dp.\n  let left_dp = stepBoxes[i-1].left;\n  let left = left_dp.match(/\\d+/)[0] - 90; // removing 10 for space + 80 for step box deleted\n  left_dp = left + \"dp\";\n  stepBoxes[i-1].left = left_dp;\n}\n\n// updating this.modes by removing step eliminated\ndebugger;\nlet modes = self.returnThisModes();\nlet a = self.modes;\n\n\n// higlighting previous step box and showing related flxScroll\nself.highlightSelectedStepBox();\n\n// closing popup and blur\nself.view.flxPopupDeleteStep.setVisibility(false);\nself.view.flxNewStepBlur.setVisibility(false);",
            "parentId": "_b86f62f93d224f35bda8be8fc5d10184",
            "callbackType": null
        }, {
            "id": "LOADING_INDICATOR_c6043ce1cd5a4016b2b0f8d4d343b3b9",
            "selectedOption": "dismiss",
            "parentId": "_b86f62f93d224f35bda8be8fc5d10184",
            "type": "LOADING_INDICATOR",
            "callbackType": null,
            "skin": "none",
            "position": "constants.LOADING_SCREEN_POSITION_FULL_SCREEN",
            "isBlocked": "true",
            "showProgressIndicator": "true"
        }, {
            "id": "ADD_SNIPPET_c39d29c0c6aa45c4a354bc50dee89f36",
            "type": "ADD_SNIPPET",
            "codeSnippet": "labelIdToRemove = labelsToRemove[i].id;\nvoltmx.print(\"### label to remove: \" + labelIdToRemove);\ndebugger;",
            "parentId": "LOOP_ACTION_d5fc8c14b71c4d91af14fad469da7bd9",
            "callbackType": null
        }, {
            "id": "INVOKE_SERVICE_a3c736cab9f341ce842fc90631ca5748",
            "type": "INVOKE_ASYNC_SERVICE",
            "inputparams": null,
            "httpheaders": null,
            "httpconfigs": null,
            "isasynchronous": true,
            "mappings": {
                "ME_Mapping_d8e098749b204cd9bff180d2b56d0cc7": {
                    "channel": "desktop",
                    "id": "ME_Mapping_d8e098749b204cd9bff180d2b56d0cc7",
                    "type": "MAPPING",
                    "callbackType": null,
                    "rectified": true,
                    "source": {
                        "type": "Variables",
                        "propertyName": "labelIdToRemove",
                        "dataType": "string",
                        "forkedPlatform": "all"
                    },
                    "target": {
                        "type": "Services",
                        "propertyName": "id",
                        "dataType": "string",
                        "forkedPlatform": "all",
                        "serviceconfig": {
                            "servicename": "mariaDB",
                            "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                            "type": "integration",
                            "operationname": "LABEL_delete",
                            "operationid": "123743"
                        }
                    }
                }
            },
            "mappingsOrder": ["ME_Mapping_d8e098749b204cd9bff180d2b56d0cc7"],
            "serviceconfig": {
                "servicename": "mariaDB",
                "serviceid": "a113ff3f-1581-4b02-ab37-8ee6cc497b5e",
                "type": "integration",
                "operationname": "LABEL_delete",
                "operationid": "123743"
            },
            "parentId": "LOOP_ACTION_d5fc8c14b71c4d91af14fad469da7bd9",
            "callbackType": null,
            "enableMappingEditor": true
        }, {
            "id": "_f8bec5b4ffdd41bebde0a86b2e0b06d1",
            "type": "IF_CONDITION",
            "conditions": [{
                "leftValueType": "expression",
                "leftValue": "LABEL_delete.opstatus === 0"
            }],
            "parentId": "INVOKE_SERVICE_a3c736cab9f341ce842fc90631ca5748",
            "callbackType": "Callback",
            "criteria": "all"
        }, {
            "id": "ADD_SNIPPET_d6a31c7b80214ae3b50d15a57aa69096",
            "type": "ADD_SNIPPET",
            "codeSnippet": "voltmx.print(\"### delete label: \" + labelsToRemove[i].id + \" successfull.\");",
            "parentId": "_f8bec5b4ffdd41bebde0a86b2e0b06d1",
            "callbackType": null
        }]
    }
}