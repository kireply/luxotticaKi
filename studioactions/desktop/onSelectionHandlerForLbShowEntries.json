{
    "AS_ListBox_b0309251dff54d378c48540355e5e28a": {
        "id": "AS_ListBox_b0309251dff54d378c48540355e5e28a",
        "type": "ACTION_SEQUENCE",
        "name": "onSelectionHandlerForLbShowEntries",
        "params": [{
            "datatype": "collection",
            "name": "eventobject"
        }],
        "contextObj": {
            "name": "frmLabelManagement",
            "type": "forms",
            "platform": "",
            "KUID": "jcf530250ee04551b0014dcb7147f2fe"
        },
        "language": "js",
        "eventType": "onSelection",
        "actions": [{
            "id": "ADD_SNIPPET_e0721febc8594f2b90a6446cd776ab17",
            "type": "ADD_SNIPPET",
            "codeSnippet": "// gblLabelsPage not empty\nif(gblLabelsPage.length !== 0) {\n\n  var x = gblLabelsPage - 1; // in order to make the formula work\n  // taking only 5 keys at a time\n\n  // Copying the list but removing the \"id\" key\n  list = gblLabelsList.map(function(obj) {\n    // Crea una copia dell'oggetto corrente\n    var newObj = Object.assign({}, obj);\n    // Rimuovi la chiave \"id\" dall'oggetto corrente\n    delete newObj.id;\n    return newObj;\n  });\n\n  var firstKeys = Object.keys(list[0]).slice( (5*x) , (5*gblLabelsPage) );\n\n  this.view.segLabels.widgetDataMap = {lb1: firstKeys[0],lb2: firstKeys[1],lb3: firstKeys[2],lb4: firstKeys[3], lb5: firstKeys[4]};\n\n  // in case the user wants all the labels\n  var data = list;  \n  // checking for the selected number of labels to show\n  if (this.view.lbShowEntries.selectedKeyValue[1] !== \"all\") {\n\n    var showLabels = parseInt(this.view.lbShowEntries.selectedKeyValue[1], 10);  // 10 is for the decimal\n    //when labels file is uploaded one row is used just to map the header\n    data = list.slice(0, (gblLabelsFileUploaded ? ++showLabels : showLabels) );\n\n  }\n\n  this.view.segLabels.setData(data);\n}",
            "parentId": null
        }]
    }
}